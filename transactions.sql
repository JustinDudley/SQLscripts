

select * from student

-- -- -- -- -- -- -- --
-- These two statements go together.  One will work, one will fail.  Sometimes that's okay.  But today
-- we're learning about transactions
insert into student (id, firstname, lastname, sat, gpa, majorid)
	values (999, 'Jane', 'Doe', 1200, 3.2, null);
-- when do you have to include the PK in the list?  When not allowed?  
-- identity clause.  If the primary K of the table is generated by sql, then you can't 
-- include it in insert statement.

insert into student (id, firstname, lastname, sat, gpa, majorid)
	values (998, 'John', 'Smith', 1000, 2.7, 999);	-- 999 is going to make this fail
-- -- -- -- -- -- -- -- -- -- --
--
-- -- -- -- - -- --
-- We're going to do it this way instead.  We enclose both statements inside a transaction:
-- (This isn't working for me right now.  I think the Db is in an incorrect state, with wrong students added/ deleted)
-- (Hmm, there may be more serious problems with my syntax below...)
begin transaction
insert into student (id, firstname, lastname, sat, gpa, majorid)
	values (999, 'Jane', 'Doe', 1200, 3.2, null);
-- when do you have to include the PK in the list?  When not allowed?  
-- identity clause.  If the primary K of the table is generated by sql, then you can't 
-- include it in insert statement.

if (@@ROWCOUNT <> 1) 	--   "<>" means "is not equal to" --@@ROWCOUNT is a built-in SQL thing. It's a SYSTEM variable, not our variable...
BEGIN
	rollback transaction  --?do the statemt(s) between the two?.  Whatever updates have been done?  Reverse it.  
END

insert into student (id, firstname, lastname, sat, gpa, majorid)
	values (998, 'John', 'Smith', 1000, 2.7, 999);	-- 999 is going to make this fail

if (@@ROWCOUNT <> 1) 	--   "<>" means "is not equal to" --@@ROWCOUNT is a SQL thing. It's a SYSTEM variable, not our variable...

	rollback transaction  -- We know this is going to fail.  When it does, the entire transaction, with Jane Doe, will roll back.  
ELSE

commit transaction
-- The transaction continues UNTIL one of two things:  A "rollback" statement, or (if everything worked) the "commit" statement

-- -- -- -- -- -- -- -- -

select * from student where id = 999;
-- if do this by PK, can't get more than one record back.  That's good.

delete from student where id = 999 or id = 998;
--  -or-
delete from student where id in (999, 998); --cleaner

-- (Def.  FK:  a column whose values exist as a primary key in another table)

insert into student (id, firstname, lastname, sat, gpa, majorid)
	values (998, 'John', 'Smith', 1000, 2.7, 999);	-- 999 is going to make this fail







